#!/usr/bin/env node
var program = require('commander'),
	path = require('path'),
	shipyard = require('../'),
	builder = require('../scripts/build'),
	server = require('../scripts/server'),
	test = require('../scripts/test');

var dir = process.cwd();

program
	.version(shipyard.version)
	.option('-d, --dir <dir>', 'choose different directory', function(d) {
		dir = path.join(dir, d);
	})
    .option('-r, --require', 'include mini require')
    .option('-m, --minify', 'force a minify')
	.option('-M, --non-minify', 'do not minify');

program
	.command('build [dest]')
	.description('Compress app into a single file')
    .action(function(dest) {
        console.log(this.minify);
        console.log(this);
		builder.compile(dir, dest, {
            force_minify: this.minify,
            no_minify: this.nonMinify,
            mini_require: this.require
        });
	});

program
	.command('test')
	.description('Run your app\'s test suite')
	.action(function() {
		var pack = shipyard.loadPackage(dir);
		var tests = path.join(dir, pack.shipyard.test);

        var lib = path.join(shipyard.dirname, shipyard.directories.lib);
        var testigo = path.join(shipyard.dirname, './test/');

        //TODO: this doesn't work in Node 0.5+
        require.paths.unshift(testigo);
        require.paths.unshift(lib);
		var cases = test.load(tests, program.args);
		test.run(cases);
	});

program
	.command('server')
	.description('Run a simple server')
	.action(function() {
		server.serve(dir);
	});

program
	.command('new <name>')
	.description('Generate a new app')
	.action(function(name) {
		console.log('generating %s', name);
	})

program.parse(process.argv);
if (process.argv.length == 2) {
	program.emit('help');
}
